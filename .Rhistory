mod1 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod1$fitted.values)
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((train2$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
pred0<- predict(mod0, newdata = test[,-2])
library(readxl)
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
View(dataset)
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
dataset <- dataset[,c(1,2)]
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
dataset <- dataset[,c(1,2)]
str(dataset)
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
dataset <- dataset[,c(1,2)]
str(dataset)
dataset$Fecha<- as.Date(dataset$Fecha, format="%Y-%m-%d")
dataset$real<-as.integer(dataset$real)
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
dataset <- dataset[,c(1,2)]
str(dataset)
dataset$Fecha<- as.Date(dataset$Fecha, format="%Y-%m-%d")
dataset$real<-as.integer(dataset$real)
#BASE 2018
db2018<-readRDS("db_2018.rds")
setwd("~/Downloads/RUNT_prediction")
#BASE 2018
db2018<-readRDS("Runt_app/db_2018.rds")
# Evaluar 2018 a Entregar
pred0<- predict(mod0, newdata = db2018[,-2])
#BASE 2018
db2018<-readRDS("Runt_app/db_2018.rds")
colnames(db2018)<-c("Fecha","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
# Evaluar 2018 a Entregar
pred0<- predict(mod0, newdata = db2018[,-2])
View(db2018)
#BASE 2018
db2018<-readRDS("Runt_app/db_2018.rds")
colnames(db2018)<-c("Fecha","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
# Evaluar 2018 a Entregar
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
## Calculando el Pseudocoeficiente de determinación.
numerador <- (dataset$real-pred0)^2
denominador <- (dataset$real - mean(dataset$real))^2
PseudoR2_0 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred1)^2
PseudoR2_1 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred2^2)^2
PseudoR2_2 <-1 - (sum(numerador)/sum(denominador))
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean((test$Unidades - pred0)^2),
mean((test$Unidades - pred1)^2),
mean((test$Unidades - (pred2^2))^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2))
metricas_test %>% kbl() %>%  kable_styling(font_size = 12)
View(db2018)
db2018<- filter(db2018, Fecha <= "2018-06-30")
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
## Calculando el Pseudocoeficiente de determinación.
numerador <- (dataset$real-pred0)^2
denominador <- (dataset$real - mean(dataset$real))^2
PseudoR2_0 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred1)^2
PseudoR2_1 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred2^2)^2
PseudoR2_2 <-1 - (sum(numerador)/sum(denominador))
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean((test$Unidades - pred0)^2),
mean((test$Unidades - pred1)^2),
mean((test$Unidades - (pred2^2))^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2))
metricas_test %>% kbl() %>%  kable_styling(font_size = 12)
db2018<- filter(db2018, Fecha <= "2018-06-30")
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
## Calculando el Pseudocoeficiente de determinación.
numerador <- (dataset$real-pred0)^2
denominador <- (dataset$real - mean(dataset$real))^2
PseudoR2_0 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred1)^2
PseudoR2_1 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred2^2)^2
PseudoR2_2 <-1 - (sum(numerador)/sum(denominador))
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean((dataset$real - pred0)^2),
mean((dataset$real - pred1)^2),
mean((dataset$real - (pred2^2))^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2))
metricas_test %>% kbl() %>%  kable_styling(font_size = 12)
variaR2 <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"Variacion"= c(((PsR2_0-PseudoR2_0)/PsR2_0)*100,
((PsR2_1-PseudoR2_1)/PsR2_1)*100,
((PsR2_2-PseudoR2_2)/PsR2_2)*100))
variaR2 %>% kbl() %>%  kable_styling(font_size = 12)
m1 <- rpart(
formula = Unidades ~ ., # Ecuación var dependiente vs. independientes
data    = datos, # Dataset
method  = "anova" # Anova para especificar que es un arbol de regresión
)
library("rpart")       # performing regression trees
library("rpart.plot")  # plotting regression trees
m1 <- rpart(
formula = Unidades ~ ., # Ecuación var dependiente vs. independientes
data    = datos, # Dataset
method  = "anova" # Anova para especificar que es un arbol de regresión
)
View(datos)
TRM<- read_excel("TRM.xlsx")
View(TRM)
TRM<- read_excel("TRM.xlsx")
datos$trm <- ifelse(datos$Fecha %in% TRM$Fecha,TRM$dolar)
str(TRM)
TRM<- read_excel("TRM.xlsx")
datos <- left_join(x = datos, y = TRM[,c("Fecha","dolar")],
by="Fecha")
View(datos)
setwd("~/Downloads/RUNT_prediction")
datos%>%kbl() %>%  kable_styling(font_size = 12) %>%
kableExtra::scroll_box(width = "100%", height = "300px")
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod0$fitted.values)
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod1$fitted.values)
## Modelo Raiz
mod2 <- lm(sqrt(Unidades) ~. , data = datos)
plot(x = datos$Unidades,(mod2$fitted.values)^2)
#saveRDS(mod2, "Modelo.rds")
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
library("rpart")       # performing regression trees
library("rpart.plot")  # plotting regression trees
m1 <- rpart(
formula = Unidades ~ ., # Ecuación var dependiente vs. independientes
data    = datos, # Dataset
method  = "anova" # Anova para especificar que es un arbol de regresión
)
library(readxl)
dataset <- read_excel("../../Downloads/datos_predichos_todos.xlsx",sheet = 2)
dataset <- dataset[,c(1,2)]
str(dataset)
dataset$Fecha<- as.Date(dataset$Fecha, format="%Y-%m-%d")
dataset$real<-as.integer(dataset$real)
db2018<- filter(db2018, Fecha <= "2018-06-30")
pred0<- predict(mod0, newdata = db2018)
View(db2018)
#BASE 2018
db2018<-readRDS("Runt_app/db_2018.rds")
#BASE 2018
db2018<-readRDS("db_2018.rds")
colnames(db2018)<-c("Fecha","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
datos <- left_join(x = db2018, y = TRM[,c("Fecha","dolar")],
by="Fecha")
# Evaluar 2018 a Entregar
pred0<- predict(mod0, newdata = db2018)
View(datos)
db2018<- filter(db2018, Fecha <= "2018-06-30")
pred0<- predict(mod0, newdata = db2018)
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = datos)
View(datos)
datos<-readRDS("Runt_app/BaseFinal.rds")
datos$Unidades<-as.integer(datos$Unidades)
colnames(datos)<-c("Fecha","Unidades","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
TRM<- read_excel("TRM.xlsx")
datos <- left_join(x = datos, y = TRM[,c("Fecha","dolar")],
by="Fecha")
View(datos)
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod0$fitted.values)
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod1$fitted.values)
## Modelo Raiz
mod2 <- lm(sqrt(Unidades) ~. , data = datos)
plot(x = datos$Unidades,(mod2$fitted.values)^2)
#saveRDS(mod2, "Modelo.rds")
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
db2018<- filter(db2018, Fecha <= "2018-06-30")
pred0<- predict(mod0, newdata = db2018)
#BASE 2018
db2018<-readRDS("db_2018.rds")
db2018<- filter(db2018, Fecha <= "2018-06-30")
colnames(db2018)<-c("Fecha","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
datos <- left_join(x = db2018, y = TRM[,c("Fecha","dolar")],
by="Fecha")
pred0<- predict(mod0, newdata = db2018)
View(db2018)
#BASE 2018
db2018<-readRDS("db_2018.rds")
db2018<- filter(db2018, Fecha <= "2018-06-30")
colnames(db2018)<-c("Fecha","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
db2018 <- left_join(x = db2018, y = TRM[,c("Fecha","dolar")],
by="Fecha")
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
## Calculando el Pseudocoeficiente de determinación.
numerador <- (dataset$real-pred0)^2
denominador <- (dataset$real - mean(dataset$real))^2
PseudoR2_0 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred1)^2
PseudoR2_1 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred2^2)^2
PseudoR2_2 <-1 - (sum(numerador)/sum(denominador))
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean((dataset$real - pred0)^2),
mean((dataset$real - pred1)^2),
mean((dataset$real - (pred2^2))^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2))
metricas_test %>% kbl() %>%  kable_styling(font_size = 12)
variaR2 <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"Variacion"= c(((PsR2_0-PseudoR2_0)/PsR2_0)*100,
((PsR2_1-PseudoR2_1)/PsR2_1)*100,
((PsR2_2-PseudoR2_2)/PsR2_2)*100))
variaR2 %>% kbl() %>%  kable_styling(font_size = 12)
View(datos)
datos<-readRDS("Runt_app/BaseFinal.rds")
datos$Unidades<-as.integer(datos$Unidades)
colnames(datos)<-c("Fecha","Unidades","year","mes","dia","dia_num","holi_bin","AssumptionofMary","ChildrensDay","ChristmasEve",
"ColombianWomensDay","ColumbusDay","CorpusChristi",
"DayofTrees","EasterSunday","Epiphany",
"EveoftheFeastoftheImmaculateConception","FathersDay",
"FeastofSaintPeterandSaintPaul","Halloween",
"IndependenceofCartagena","LanguageDay","MothersDay",
"NewYearsEve","PalmSunday","SaintJosephsDay",
"SecretariesDay","TeachersDay","ValentinesDay",
"WomensDay")
TRM<- read_excel("TRM.xlsx")
datos <- left_join(x = datos, y = TRM[,c("Fecha","dolar")],
by="Fecha")
View(datos)
View(datos)
train<- datos[,c(1:7,31)]
View(train)
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod0$fitted.values)
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = train)
plot(x = datos$Unidades,mod0$fitted.values)
summary(mod0)
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = train[,-1])
plot(x = datos$Unidades,mod0$fitted.values)
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
db2018<- db2018[,c(1:7,31)]
View(db2018)
db2018<- db2018[,c(1:6,30)]
db2018<- db2018[,-1]
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
View(db2018)
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = datos)
plot(x = datos$Unidades,mod1$fitted.values)
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = train[,-1])
plot(x = datos$Unidades,mod1$fitted.values)
## Modelo Raiz
mod2 <- lm(sqrt(Unidades) ~. , data = train[,-1])
plot(x = datos$Unidades,(mod2$fitted.values)^2)
#saveRDS(mod2, "Modelo.rds")
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
db2018<- db2018[,c(1:6,30)]
#db2018<- db2018[,c(1:6,30)]
#db2018<- db2018[,-1]
pred0<- predict(mod0, newdata = db2018)
pred1<- predict(mod1, newdata = db2018)
pred2<- predict(mod2,newdata = db2018)
## Calculando el Pseudocoeficiente de determinación.
numerador <- (dataset$real-pred0)^2
denominador <- (dataset$real - mean(dataset$real))^2
PseudoR2_0 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred1)^2
PseudoR2_1 <-1 - (sum(numerador)/sum(denominador))
numerador <- (dataset$real-pred2^2)^2
PseudoR2_2 <-1 - (sum(numerador)/sum(denominador))
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean((dataset$real - pred0)^2),
mean((dataset$real - pred1)^2),
mean((dataset$real - (pred2^2))^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2))
metricas_test %>% kbl() %>%  kable_styling(font_size = 12)
variaR2 <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"Variacion"= c(((PsR2_0-PseudoR2_0)/PsR2_0)*100,
((PsR2_1-PseudoR2_1)/PsR2_1)*100,
((PsR2_2-PseudoR2_2)/PsR2_2)*100))
variaR2 %>% kbl() %>%  kable_styling(font_size = 12)
P1 <- ggplot(train, aes(y=Unidades))+
geom_boxplot(fill='#FFCCC1',alpha=0.7)+
labs(title = 'Gráfico de cajas para la variable Unidad',
x = 'Unidades', y='Número de registros diarios RUNT',
color=NULL)
cooksd <- cooks.distance(mod0)
P2<- ggplot(train, aes(x=Unidades, y=cooksd)) +
geom_point(col='black', fill='blue', shape=21, alpha=0.5)+ geom_hline(yintercept = 4*mean(cooksd, na.rm=T), color = "red")+ ggtitle("Distancias de Cook (Modelo Lineal")
grid.arrange(P1, P2, ncol=2)
View(train)
#train<- datos[,c(1:7,31)]
train<- datos[,-1]
# Modelo Lineal Basico
mod0 <- lm(Unidades ~. , data = train)
plot(x = datos$Unidades,mod0$fitted.values)
P1 <- ggplot(train, aes(y=Unidades))+
geom_boxplot(fill='#FFCCC1',alpha=0.7)+
labs(title = 'Gráfico de cajas para la variable Unidad',
x = 'Unidades', y='Número de registros diarios RUNT',
color=NULL)
cooksd <- cooks.distance(mod0)
P2<- ggplot(train, aes(x=Unidades, y=cooksd)) +
geom_point(col='black', fill='blue', shape=21, alpha=0.5)+ geom_hline(yintercept = 4*mean(cooksd, na.rm=T), color = "red")+ ggtitle("Distancias de Cook (Modelo Lineal")
grid.arrange(P1, P2, ncol=2)
influential <- na.omit(as.numeric(names(cooksd)[(cooksd > (4/nrow(datos)))])) %>% as.data.frame()
influential <- filter(influential, influential %in% datos$holi_bin==0 )%>%unlist()
colnames(influential)<-NULL
train <- train[-c(1,influential), ]
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = train)
influential <- na.omit(as.numeric(names(cooksd)[(cooksd > (4/nrow(datos)))])) train <- train[-c(influential), ]
influential <- na.omit(as.numeric(names(cooksd)[(cooksd > (4/nrow(train)))])) train <- train[-c(influential), ]
influential <- na.omit(as.numeric(names(cooksd)[(cooksd > (4/nrow(train)))]))
train <- train[-c(1,influential), ]
# Modelos Sin Outliers
mod1 <- lm(Unidades ~. , data = train)
train<- datos[,c(1:7,31)]
train<- datos[,-1]
m1 <- rpart(
formula = Unidades ~ .,
data = train,
method = "anova"
)
m1
m1 <- rpart(
formula = Unidades ~ .,
data = train,
method = "anova"
)
mod3 <- rpart(
formula = Unidades ~ .,
data = train,
method = "anova"
)
metricas_test <- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2","Modelo3"),
"MSE"=c(mean((dataset$real - pred0)^2),
mean((dataset$real - pred1)^2),
mean((dataset$real - (pred2^2))^2),
mean((dataset$real - pred3)^2)),
"R pseudo2"= c(PseudoR2_0,PseudoR2_1,PseudoR2_2,))
metricas<- data.frame("Modelo"=c("Modelo0","Modelo1","Modelo2"),
"MSE"=c(mean(mod0$residuals^2),
mean(mod1$residuals^2),
mean((datos$Unidades - fitted(mod2)^2)^2)),
"R pseudo2"= c(summary(mod0)$r.squared,
summary(mod1)$r.squared,
summary(mod2)$r.squared),
"AIC"=c(AIC(mod0),
AIC(mod1),
AIC(mod2)))
metricas %>% kbl() %>%  kable_styling(font_size = 12)
PsR2_0 <- summary(mod0)$r.squared
PsR2_1 <- summary(mod1)$r.squared
PsR2_2 <- summary(mod2)$r.squared
pred<- predict(mod3,newdata = train)
numerador <- (train$Unidades-pred)^2
denominador <- (train$Unidades - mean(train$Unidades))^2
PsR2_2 <- 1 - (sum(numerador)/sum(denominador)) #train R2
pred3<- predict(mod3,newdata = db2018)
train<- datos[,c(1:7,31)]
train<- datos[,-1]
View(train)
View(db2018)
View(train)
train<- datos[,c(1:7,31)]
train<- datos[,-1]
View(train)
