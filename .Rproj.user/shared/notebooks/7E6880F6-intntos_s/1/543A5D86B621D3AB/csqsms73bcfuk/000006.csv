"0",""
"0","# Selección lambda óptimo"
"0","elastic_lambda_opt = elastic_cv$lambda.min"
"0",""
"0","# Entrenamiento modelo óptimo"
"0","mod7 = glmnet(x=x_train, # Matriz de regresores"
"0","                 y=y_train, #Vector de la variable a predecir"
"0","                 alpha=0.5, # Indicador del tipo de regularizacion"
"0","                 standardize = TRUE,  # Estandarizamos"
"0","                 lambda = elastic_lambda_opt)"
"0",""
"0","# Salida estandar"
"0","mod7"
"1","
Call: "
"1"," "
"1","glmnet(x = x_train, y = y_train, alpha = 0.5, lambda = elastic_lambda_opt, "
"1"," "
"1","    standardize = TRUE)"
"1"," "
"1","

"
"1"," "
"1"," Df"
"1","  %Dev"
"1"," Lambda"
"1","
1"
"1"," 25"
"1"," 90.07"
"1","  3.803"
"1","
"
"0","## predicciones de train"
"0",""
"0","predicciones_train7 <- predict(mod7, newx = x_train)"
"0",""
"0",""
"0","## medidas de train"
"0",""
"0","train.MSE.mod7 <- mean((predicciones_train7 - y_train)^2)"
"0","train.R2.mod7 = R2(predicciones_train7,y_train)"
"0",""
